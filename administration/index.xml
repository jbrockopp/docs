<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vela – Overview</title>
    <link>https://jbrockopp.github.io/docs/administration/</link>
    <description>Recent content in Overview on Vela</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jbrockopp.github.io/docs/administration/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Administration: Compiler</title>
      <link>https://jbrockopp.github.io/docs/administration/server/reference/compiler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/server/reference/compiler/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
The compiler is embedded directly in the server and can only be accessed through the server.
&lt;/div&gt;

&lt;p&gt;This component is responsible for transforming a &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/tour/&#34;&gt;pipeline&lt;/a&gt; into an executable representation for the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/worker/&#34;&gt;worker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During the transformation, it will retrieve &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/tour/templates/&#34;&gt;templates&lt;/a&gt; from one or more registries depending on the pipeline configuration.&lt;/p&gt;
&lt;p&gt;By default, Vela will use &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; as a registry for fetching templates, but you can configure additional registries as well.&lt;/p&gt;
&lt;p&gt;However, to fetch templates from a private organization or repository on GitHub, you need to provide a token to the compiler.&lt;/p&gt;
&lt;p&gt;Additionally, the compiler can send pipelines to an external endpoint, to be modified, based off custom configuration.&lt;/p&gt;
&lt;p&gt;This modification endpoint can be used to perform any number of customizations to all workloads created by the system.&lt;/p&gt;
&lt;p&gt;Some examples of what the modification endpoint can do include, but are not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;injecting or updating the configuration for &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/tour/secrets/&#34;&gt;secrets&lt;/a&gt; in the pipeline&lt;/li&gt;
&lt;li&gt;injecting or updating the configuration for &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/tour/services/&#34;&gt;services&lt;/a&gt; in the pipeline&lt;/li&gt;
&lt;li&gt;injecting or updating the configuration for &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/tour/stages/&#34;&gt;stages&lt;/a&gt; in the pipeline&lt;/li&gt;
&lt;li&gt;injecting or updating the configuration for &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/tour/steps/&#34;&gt;steps&lt;/a&gt; in the pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;github-driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;enables using Github or GitHub Enterprise Server as a registry for templates&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;COMPILER_GITHUB&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_COMPILER_GITHUB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;github-url&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fully qualified url to GitHub or GitHub Enterprise Server for templates&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;COMPILER_GITHUB_URL&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_COMPILER_GITHUB_URL&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;github-token&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;token used for authentication when fetching registry templates&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;COMPILER_GITHUB_TOKEN&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_COMPILER_GITHUB_TOKEN&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;modification-addr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fully qualified url to endpoint for modifying pipelines&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MODIFICATION_ADDR&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_MODIFICATION_ADDR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;modification-retries&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number of times to resend failed requests to the modification endpoint&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MODIFICATION_RETRIES&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_MODIFICATION_RETRIES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;modification-secret&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;authenticates communication between compiler and the modification endpoint&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MODIFICATION_SECRET&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_MODIFICATION_SECRET&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;modification-timeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;timeout for requests sent to the modification endpoint&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;8s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MODIFICATION_TIMEOUT&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_MODIFICATION_TIMEOUT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/&#34;&gt;server reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;github&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses GitHub or GitHug Enterprise Server as a template registry&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/enterprise-server/admin/overview/system-overview&#34;&gt;https://docs.github.com/en/enterprise-server/admin/overview/system-overview&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;github&#34;&gt;GitHub&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://github.com/about/&#34;&gt;GitHub official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub is where the world builds software. Millions of developers and companies build, ship, and maintain their software on GitHub—the largest and most advanced development platform in the world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela server that will use a GitHub Server as a template registry:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_ADDR=https://vela-server.example.com \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_COMPILER_GITHUB=true \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_COMPILER_TOKEN=&amp;lt;github-personal-access-token&amp;gt; \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_COMPILER_URL=https://github.com \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_DATABASE_ENCRYPTION_KEY=&amp;lt;encryption-key&amp;gt; \
  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
  --env=VELA_PORT=443 \
  --env=VELA_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_SCM_CLIENT=&amp;lt;oauth-client-id&amp;gt; \
  --env=VELA_SCM_SECRET=&amp;lt;oauth-client-secret&amp;gt; \
  --env=VELA_WEBUI_ADDR=https://vela.example.com \
  --name=server \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  target/vela-server:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
&lt;p&gt;This GitHub configuration is enabled by default and is not necessary to provide in order for Vela to operate.&lt;/p&gt;
&lt;p&gt;However, this configuration will enable you to fetch templates from a private organization or repository on GitHub.&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&#34;github-enterprise-server&#34;&gt;GitHub Enterprise Server&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://docs.github.com/en/enterprise-server/admin/overview/system-overview&#34;&gt;GitHub Enterprise official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub Enterprise Server is your organization&amp;rsquo;s private copy of GitHub contained within a virtual appliance, hosted on premises or in the cloud, that you configure and control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela server that will use a GitHub Enterprise Server as a template registry:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_ADDR=https://vela-server.example.com \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_COMPILER_GITHUB=true \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_COMPILER_TOKEN=&amp;lt;github-personal-access-token&amp;gt; \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_COMPILER_URL=https://git.example.com \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_DATABASE_ENCRYPTION_KEY=&amp;lt;encryption-key&amp;gt; \
  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
  --env=VELA_PORT=443 \
  --env=VELA_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_SCM_CLIENT=&amp;lt;oauth-client-id&amp;gt; \
  --env=VELA_SCM_SECRET=&amp;lt;oauth-client-secret&amp;gt; \
  --env=VELA_WEBUI_ADDR=https://vela.example.com \
  --name=server \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  target/vela-server:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Administration: Database</title>
      <link>https://jbrockopp.github.io/docs/administration/server/reference/database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/server/reference/database/</guid>
      <description>
        
        
        &lt;p&gt;This component is responsible for integrating with a database system based off the configuration provided.&lt;/p&gt;
&lt;p&gt;The database system is used by Vela for storing application &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_at_rest&#34;&gt;data at rest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This data is an organized collection of information necessary for the platform to operate.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
Any sensitive data stored in the database will be encrypted using the &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&#34;&gt;Advanced Encryption Standard (AES)&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.addr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;full connection string to the database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_ADDR&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_ADDR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;type of client to control and operate the database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vela.sqlite&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_DRIVER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_DRIVER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.compression.level&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;level of compression for logs stored in the database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_COMPRESSION_LEVEL&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_COMPRESSION_LEVEL&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.connection.idle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of idle connections to the database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_CONNECTION_IDLE&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_CONNECTION_IDLE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.connection.life&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;duration of time a connection is reusable&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_CONNECTION_LIFE&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_CONNECTION_LIFE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.connection.open&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of open connections to the database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_CONNECTION_OPEN&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_CONNECTION_OPEN&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.encryption.key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;AES-256 key for encrypting/decrypting values in the database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_ENCRYPTION_KEY&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_ENCRYPTION_KEY&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;database.skip_creation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;skips the creation of tables and indexes in the database&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DATABASE_SKIP_CREATION&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_DATABASE_SKIP_CREATION&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/&#34;&gt;server reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;postgres&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a PostgreSQL database for storing data at rest&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;https://www.postgresql.org/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a SQLite database for storing data at rest&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.sqlite.org/&#34;&gt;https://www.sqlite.org/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;postgres&#34;&gt;Postgres&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL is a powerful, open source object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela server that will connect to a Postgres database:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_ADDR=https://vela-server.example.com \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_DATABASE_DRIVER=postgres \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_DATABASE_ADDR=postgres://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_DATABASE_ENCRYPTION_KEY=&amp;lt;encryption-key&amp;gt; \
  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
  --env=VELA_PORT=443 \
  --env=VELA_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_SCM_CLIENT=&amp;lt;oauth-client-id&amp;gt; \
  --env=VELA_SCM_SECRET=&amp;lt;oauth-client-secret&amp;gt; \
  --env=VELA_WEBUI_ADDR=https://vela.example.com \
  --name=server \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  target/vela-server:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sqlite3&#34;&gt;Sqlite3&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://www.sqlite.org/&#34;&gt;Sqlite official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SQLite is a C-language library that implements a small, fast, self-contained, high-reliability, full-featured, SQL database engine. SQLite is the most used database engine in the world. SQLite is built into all mobile phones and most computers and comes bundled inside countless other applications that people use every day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela server that will connect to a Sqlite database:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_ADDR=https://vela-server.example.com \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_DATABASE_DRIVER=sqlite3 \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_DATABASE_ADDR=vela.sqlite \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_DATABASE_ENCRYPTION_KEY=&amp;lt;encryption-key&amp;gt; \
  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
  --env=VELA_PORT=443 \
  --env=VELA_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_SCM_CLIENT=&amp;lt;oauth-client-id&amp;gt; \
  --env=VELA_SCM_SECRET=&amp;lt;oauth-client-secret&amp;gt; \
  --env=VELA_WEBUI_ADDR=https://vela.example.com \
  --name=server \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  target/vela-server:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
This Sqlite configuration is enabled by default and is not necessary to provide in order for Vela to operate.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Administration: Executor</title>
      <link>https://jbrockopp.github.io/docs/administration/worker/reference/executor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/worker/reference/executor/</guid>
      <description>
        
        
        &lt;p&gt;This component is responsible for coordinating with &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/worker/runtime/&#34;&gt;the runtime&lt;/a&gt; to manage workload resources.&lt;/p&gt;
&lt;p&gt;Throughout the lifecycle of these resources, this component will track and report results back to the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/&#34;&gt;server&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;executor.driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;type of client to control and operate executor&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;linux&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXECUTOR_DRIVER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_EXECUTOR_DRIVER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;executor.log_method&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;method used to publish logs back to the server&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;byte-chunks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXECUTOR_LOG_METHOD&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_EXECUTOR_LOG_METHOD&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/worker/reference/&#34;&gt;worker reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;linux&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a Linux executor for running workloads&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.linux.com/&#34;&gt;https://www.linux.com/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;local&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a Local executor for running workloads (CLI only)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://www.linux.com/what-is-linux/&#34;&gt;Linux official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux has been around since the mid-1990s and has since reached a user-base that spans the globe. Just like Windows, iOS, and Mac OS, Linux is an operating system. In fact, one of the most popular platforms on the planet, Android, is powered by the Linux operating system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela worker that will use a Linux executor:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_EXECUTOR_DRIVER=linux \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
  --env=VELA_SERVER_ADDR=https://vela-server.example.com \
  --env=VELA_SERVER_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_WORKER_ADDR=https://vela-worker.example.com \
  --name=worker \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --volume=/var/run/docker.sock:/var/run/docker.sock \
  target/vela-worker:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
This Linux configuration is enabled by default and is not necessary to provide in order for Vela to operate.
&lt;/div&gt;

&lt;h3 id=&#34;local&#34;&gt;Local&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;local&lt;/code&gt; executor driver is only intended for use with the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/reference/cli/&#34;&gt;Vela CLI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not recommended to run any workloads on a worker configured with this driver.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Administration: Queue</title>
      <link>https://jbrockopp.github.io/docs/administration/server/reference/queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/server/reference/queue/</guid>
      <description>
        
        
        &lt;p&gt;This component is responsible for integrating with a queue system based off the configuration provided.&lt;/p&gt;
&lt;p&gt;The queue system is used by the Vela server for pushing workloads that will be run by a &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/worker/&#34;&gt;worker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Workloads published to the queue are managed with a &lt;a href=&#34;https://en.wikipedia.org/wiki/FIFO_(computing_and_electronics)&#34;&gt;first in, first out (FIFO)&lt;/a&gt; strategy.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.addr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;full connection string to the queue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_ADDR&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_ADDR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.cluster&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;configures the client for a queue cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_CLUSTER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_CLUSTER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;type of client to control and operate queue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_DRIVER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_DRIVER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.pop.timeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;timeout for requests that pop items off the queue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;60s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_POP_TIMEOUT&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_POP_TIMEOUT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.routes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unique channels or topics for pushing workloads&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[ vela ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_ROUTES&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_ROUTES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/&#34;&gt;server reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a Redis queue for managing workloads&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;https://redis.io/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;redis&#34;&gt;Redis&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://redis.io/&#34;&gt;Redis official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela server that will connect to a Redis queue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_ADDR=https://vela-server.example.com \
  --env=VELA_DATABASE_ENCRYPTION_KEY=&amp;lt;encryption-key&amp;gt; \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_QUEUE_DRIVER=redis \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_PORT=443 \
  --env=VELA_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_SCM_CLIENT=&amp;lt;oauth-client-id&amp;gt; \
  --env=VELA_SCM_SECRET=&amp;lt;oauth-client-secret&amp;gt; \
  --env=VELA_WEBUI_ADDR=https://vela.example.com \
  --name=server \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  target/vela-server:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Administration: Queue</title>
      <link>https://jbrockopp.github.io/docs/administration/worker/reference/queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/worker/reference/queue/</guid>
      <description>
        
        
        &lt;p&gt;This component is responsible for integrating with a queue system based off the configuration provided.&lt;/p&gt;
&lt;p&gt;The queue system is used by Vela for pulling workloads, provided by the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/&#34;&gt;server&lt;/a&gt;, that will be run.&lt;/p&gt;
&lt;p&gt;Workloads fetched from the queue are managed with a &lt;a href=&#34;https://en.wikipedia.org/wiki/FIFO_(computing_and_electronics)&#34;&gt;first in, first out (FIFO)&lt;/a&gt; strategy.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.addr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;full connection string to the queue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_ADDR&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_ADDR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.cluster&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;configures the client for a queue cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_CLUSTER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_CLUSTER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;type of client to control and operate queue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_DRIVER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_DRIVER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.pop.timeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;timeout for requests that pop items off the queue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;60s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_POP_TIMEOUT&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_POP_TIMEOUT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue.routes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unique channels or topics for pulling workloads&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[ vela ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUEUE_ROUTES&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_QUEUE_ROUTES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/worker/reference/&#34;&gt;worker reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a Redis queue for managing workloads&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;https://redis.io/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;redis&#34;&gt;Redis&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://redis.io/&#34;&gt;Redis official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela worker that will connect to a Redis queue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_QUEUE_DRIVER=redis \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_SERVER_ADDR=https://vela-server.example.com \
  --env=VELA_SERVER_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_WORKER_ADDR=https://vela-worker.example.com \
  --name=worker \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --volume=/var/run/docker.sock:/var/run/docker.sock \
  target/vela-worker:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Administration: Runtime</title>
      <link>https://jbrockopp.github.io/docs/administration/worker/reference/runtime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/worker/reference/runtime/</guid>
      <description>
        
        
        &lt;p&gt;This component is responsible for integrating with a runtime environment based off the configuration provided.&lt;/p&gt;
&lt;p&gt;The runtime environment is used by Vela for executing workload resources and managing their lifecycle.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;runtime.config&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;path to configuration file for the runtime&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RUNTIME_CONFIG&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_RUNTIME_CONFIG&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;runtime.driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;type of client to control and operate runtime&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RUNTIME_DRIVER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_RUNTIME_DRIVER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;runtime.namespace&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;namespace to use for the runtime (only for kubernetes)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RUNTIME_NAMESPACE&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_RUNTIME_NAMESPACE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;runtime.privileged-images&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;images allowed to run in privileged mode for the runtime&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[ target/vela-docker ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RUNTIME_PRIVILEGED_IMAGES&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_RUNTIME_PRIVILEGED_IMAGES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;runtime.volumes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;path to host volumes to mount into resources for the runtime&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RUNTIME_VOLUMES&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_RUNTIME_VOLUMES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/worker/reference/&#34;&gt;worker reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a Docker daemon for creating and managing runtime resources&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://docker.io/&#34;&gt;https://docker.io/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;kubernetes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a Kubernetes cluster for creating and managing runtime resources&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;https://kubernetes.io/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;docker&#34;&gt;Docker&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://docker.io/&#34;&gt;Docker official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker takes away repetitive, mundane configuration tasks and is used throughout the development lifecycle for fast, easy and portable application development - desktop and cloud. Docker’s comprehensive end to end platform includes UIs, CLIs, APIs and security that are engineered to work together across the entire application delivery lifecycle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela worker that will use a Docker runtime:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_RUNTIME_DRIVER=docker \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_SERVER_ADDR=https://vela-server.example.com \
  --env=VELA_SERVER_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_WORKER_ADDR=https://vela-worker.example.com \
  --name=worker \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --volume=/var/run/docker.sock:/var/run/docker.sock
  target/vela-worker:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
This Docker configuration is enabled by default and is not necessary to provide in order for Vela to operate.
&lt;/div&gt;

&lt;h3 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela worker that will use a Kubernetes runtime:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_RUNTIME_DRIVER=kubernetes \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_RUNTIME_CONFIG=/root/.kube/config \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_RUNTIME_NAMESPACE=vela \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_SERVER_ADDR=https://vela-server.example.com \
  --env=VELA_SERVER_SECRET=&amp;lt;shared-secret&amp;gt; \
  --env=VELA_WORKER_ADDR=https://vela-worker.example.com \
  --name=worker \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --volume=/var/run/docker.sock:/var/run/docker.sock \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --volume=/root/.kube/config:/root/.kube/config \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  target/vela-worker:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Administration: SCM</title>
      <link>https://jbrockopp.github.io/docs/administration/server/reference/scm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/server/reference/scm/</guid>
      <description>
        
        
        &lt;p&gt;This component is responsible for integrating with a source control management (SCM) system based off the configuration provided.&lt;/p&gt;
&lt;p&gt;The SCM system is used by Vela for both authentication and authorization of interactions performed within the application.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/authentication_workflow.png&#34; alt=&#34;Authentication Workflow&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scm.addr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fully qualified url for the SCM&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;https://github.com&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCM_ADDR&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SCM_ADDR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scm.client&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;client ID from the generated OAuth application on the SCM&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCM_CLIENT&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SCM_CLIENT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scm.context&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;message to set in commit status on the SCM&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;continuous-integration/vela&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCM_CONTEXT&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SCM_CONTEXT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scm.driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;type of client to control and operate SCM&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;github&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCM_DRIVER&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SCM_DRIVER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scm.scopes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;permission scopes to apply for the OAuth credentials on the SCM&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[ repo, repo:status, user:email, read:user, read:org ]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCM_SCOPES&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SCM_SCOPES&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scm.secret&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;client secret from the generated OAuth application on the SCM&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCM_SECRET&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SCM_SECRET&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scm.webhook.addr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;url for webhooks on the SCM to send requests to&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the address of the Vela server (&lt;code&gt;$VELA_ADDR&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCM_WEBHOOK_ADDR&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SCM_WEBHOOK_ADDR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/&#34;&gt;server reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;github&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a GitHub or GitHug Enterprise Server for the SCM&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/about/&#34;&gt;https://github.com/about/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;github&#34;&gt;GitHub&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://github.com/about/&#34;&gt;GitHub official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub is where the world builds software. Millions of developers and companies build, ship, and maintain their software on GitHub—the largest and most advanced development platform in the world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of creating a &lt;a href=&#34;https://docs.github.com/developers/apps/building-oauth-apps/creating-an-oauth-app&#34;&gt;GitHub OAuth application&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jbrockopp.github.io/docs/docs/administration/server/github_oauth.png&#34; alt=&#34;OAuth Application&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-secondary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning:&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;Homepage URL&lt;/code&gt; should match &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/#vela_addr&#34;&gt;the &lt;code&gt;VELA_ADDR&lt;/code&gt; environment variable&lt;/a&gt; provided to the server for clusters without a UI.&lt;/p&gt;
&lt;p&gt;Otherwise, the &lt;code&gt;Homepage URL&lt;/code&gt; should match &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/#vela_webui_addr&#34;&gt;the &lt;code&gt;VELA_WEBUI_ADDR&lt;/code&gt; environment variable&lt;/a&gt; provided to the server.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Authorization callback URL&lt;/code&gt; should contain &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/#vela_addr&#34;&gt;the &lt;code&gt;VELA_ADDR&lt;/code&gt; environment variable&lt;/a&gt; with a &lt;code&gt;/authenticate&lt;/code&gt; suffix.&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&#34;github-enterprise-server&#34;&gt;GitHub Enterprise Server&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://docs.github.com/en/enterprise-server/admin/overview/system-overview&#34;&gt;GitHub Enterprise official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub Enterprise Server is your organization&amp;rsquo;s private copy of GitHub contained within a virtual appliance, hosted on premises or in the cloud, that you configure and control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of creating a &lt;a href=&#34;https://docs.github.com/enterprise-server@3.3/developers/apps/building-oauth-apps/creating-an-oauth-app&#34;&gt;GitHub Enterprise Server OAuth application&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jbrockopp.github.io/docs/docs/administration/server/github_enterprise_oauth.png&#34; alt=&#34;OAuth Application&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-secondary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning:&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;Homepage URL&lt;/code&gt; should match &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/#vela_addr&#34;&gt;the &lt;code&gt;VELA_ADDR&lt;/code&gt; environment variable&lt;/a&gt; provided to the server for clusters without a UI.&lt;/p&gt;
&lt;p&gt;Otherwise, the &lt;code&gt;Homepage URL&lt;/code&gt; should match &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/#vela_webui_addr&#34;&gt;the &lt;code&gt;VELA_WEBUI_ADDR&lt;/code&gt; environment variable&lt;/a&gt; provided to the server.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Authorization callback URL&lt;/code&gt; should contain &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/#vela_addr&#34;&gt;the &lt;code&gt;VELA_ADDR&lt;/code&gt; environment variable&lt;/a&gt; with a &lt;code&gt;/authenticate&lt;/code&gt; suffix.&lt;/p&gt;

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Administration: Secret</title>
      <link>https://jbrockopp.github.io/docs/administration/server/reference/secret/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jbrockopp.github.io/docs/administration/server/reference/secret/</guid>
      <description>
        
        
        &lt;p&gt;This component is optional and is responsible for integrating with an external secret system based off the configuration provided.&lt;/p&gt;
&lt;p&gt;The secret system is used by Vela for storing sensitive application &lt;a href=&#34;https://en.wikipedia.org/wiki/Data_at_rest&#34;&gt;data at rest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By default, Vela will use &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/database/&#34;&gt;the database&lt;/a&gt; to store the sensitive data if no other secret system is configured.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
Any sensitive data stored in the database will be encrypted using the &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&#34;&gt;Advanced Encryption Standard (AES)&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The following options are used to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Environment Variables&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.addr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;fully qualified url to the HashiCorp Vault instance&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT_ADDR&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT_ADDR&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.auth-method&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;authentication method used to obtain token from the HashiCorp Vault instance&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT_AUTH_METHOD&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT_AUTH_METHOD&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.aws-role&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;HashiCorp Vault role used to connect to the auth/aws/login endpoint&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT_AWS_ROLE&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT_AWS_ROLE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.driver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;enables HashiCorp Vault as a secret engine&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.prefix&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;prefix for k/v secrets in the HashiCorp Vault instance&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT_PREFIX&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT_PREFIX&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.renewal&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;frequency to renew the token for the HashiCorp Vault instance&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;30m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT_RENEWAL&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT_RENEWAL&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.token&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;token required to access the HashiCorp Vault instance&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N/A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT_TOKEN&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT_TOKEN&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secret.vault.version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;version for the k/v backend for the HashiCorp Vault instance&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SECRET_VAULT_VERSION&lt;/code&gt;&lt;br&gt;&lt;code&gt;VELA_SECRET_VAULT_VERSION&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
For more information on these configuration options, please see the &lt;a href=&#34;https://jbrockopp.github.io/docs/docs/administration/server/reference/&#34;&gt;server reference&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id=&#34;drivers&#34;&gt;Drivers&lt;/h2&gt;
&lt;p&gt;The following drivers are available to configure the component:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Documentation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vault&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;uses a HashiCorp Vault instance for storing sensitive data at rest&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.vaultproject.io/&#34;&gt;https://www.vaultproject.io/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;hashicorp-vault&#34;&gt;HashiCorp Vault&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&#34;https://www.vaultproject.io/&#34;&gt;HashiCorp Vault official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HashiCorp Vault enables you to secure, store and tightly control access to tokens, passwords, certificates, encryption keys for protecting secrets and other sensitive data using a UI, CLI, or HTTP API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The below configuration displays an example of starting the Vela server that will connect to a HashiCorp Vault instance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$ docker run \
  --detach=true \
  --env=VELA_ADDR=https://vela-server.example.com \
  --env=VELA_DATABASE_ENCRYPTION_KEY=&amp;lt;encryption-key&amp;gt; \
  --env=VELA_QUEUE_DRIVER=redis \
  --env=VELA_QUEUE_ADDR=redis://&amp;lt;password&amp;gt;@&amp;lt;hostname&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt; \
  --env=VELA_PORT=443 \
  --env=VELA_SECRET=&amp;lt;shared-secret&amp;gt; \
&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_SECRET_VAULT=true \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_SECRET_VAULT_ADDR=https://vault.example.com \
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+ --env=VELA_SECRET_VAULT_TOKEN=&amp;lt;vault-token&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;  --env=VELA_SCM_CLIENT=&amp;lt;oauth-client-id&amp;gt; \
  --env=VELA_SCM_SECRET=&amp;lt;oauth-client-secret&amp;gt; \
  --env=VELA_WEBUI_ADDR=https://vela.example.com \
  --name=server \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  target/vela-server:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
